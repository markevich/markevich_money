defmodule MarkevichMoney.Pipelines.Help.MessagesTest do
  @moduledoc false
  use MarkevichMoney.DataCase, async: true
  use MarkevichMoney.MockNadia, async: true
  use MarkevichMoney.Constants
  alias MarkevichMoney.MessageData
  alias MarkevichMoney.Pipelines

  describe "#{@help_message} message" do
    setup do
      user = insert(:user)

      %{user: user}
    end

    mocked_test "Renders help message", %{user: user} do
      expected_message = """
      –ü—Ä–∏–≤–µ—Ç! –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –ø–æ –∫–∞–∫–æ–º—É-—Ç–æ –≤–æ–ø—Ä–æ—Å—É? –ñ–º–∏ –∫–Ω–æ–ø–∫—É —Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π —Ç–µ–±—è —Ç–µ–º–æ–π!
      """

      expected_markup = %Nadia.Model.InlineKeyboardMarkup{
        inline_keyboard: [
          [
            %Nadia.Model.InlineKeyboardButton{
              callback_data:
                "{\"pipeline\":\"#{@help_callback}\",\"type\":\"#{@help_callback_newby}\"}",
              switch_inline_query: nil,
              text: "ü§î –Ø –Ω–æ–≤–µ–Ω—å–∫–∏–π, –ø–æ–º–æ–≥–∏—Ç–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è!",
              url: nil
            }
          ],
          [
            %Nadia.Model.InlineKeyboardButton{
              callback_data:
                "{\"pipeline\":\"#{@help_callback}\",\"type\":\"#{@help_callback_add}\"}",
              switch_inline_query: nil,
              text: "üì≤ –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞—Ç—É –≤—Ä—É—á–Ω—É—é?",
              url: nil
            }
          ],
          [
            %Nadia.Model.InlineKeyboardButton{
              callback_data:
                "{\"pipeline\":\"#{@help_callback}\",\"type\":\"#{@help_callback_stats}\"}",
              switch_inline_query: nil,
              text: "üìà –ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É?",
              url: nil
            }
          ],
          [
            %Nadia.Model.InlineKeyboardButton{
              callback_data:
                "{\"pipeline\":\"#{@help_callback}\",\"type\":\"#{@help_callback_edit_description}\"}",
              switch_inline_query: nil,
              text: "üìù –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏?",
              url: nil
            }
          ],
          [
            %Nadia.Model.InlineKeyboardButton{
              callback_data:
                "{\"pipeline\":\"#{@help_callback}\",\"type\":\"#{@help_callback_limits}\"}",
              switch_inline_query: nil,
              text: "‚úã –†–∞–±–æ—Ç–∞ —Å –ª–∏–º–∏—Ç–∞–º–∏.",
              url: nil
            }
          ],
          [
            %Nadia.Model.InlineKeyboardButton{
              callback_data:
                "{\"pipeline\":\"#{@help_callback}\",\"type\":\"#{@help_callback_support}\"}",
              switch_inline_query: nil,
              text: "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞.",
              url: nil
            }
          ],
          [
            %Nadia.Model.InlineKeyboardButton{
              callback_data:
                "{\"pipeline\":\"#{@help_callback}\",\"type\":\"#{@help_callback_bug}\"}",
              switch_inline_query: nil,
              text: "üêû –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ.",
              url: nil
            }
          ]
        ]
      }

      Pipelines.call(%MessageData{message: @help_message, chat_id: user.telegram_chat_id})

      assert_called(
        Nadia.send_message(user.telegram_chat_id, expected_message,
          reply_markup: expected_markup,
          parse_mode: "Markdown"
        )
      )
    end
  end
end
